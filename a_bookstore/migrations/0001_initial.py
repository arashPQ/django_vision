# Generated by Django 5.2.6 on 2025-09-13 15:30

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, upload_to='authors/')),
                ('website', models.URLField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='PaperQuality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('paper_type', models.CharField(choices=[('glossy', 'glossy'), ('matte', 'matte'), ('cream', 'cream'), ('white', 'white'), ('recycled', 'recycled')], max_length=10)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='PrintingQuality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('print_type', models.CharField(choices=[('bw', 'black & white'), ('color', 'colored'), ('mixed', 'mixed')], max_length=10)),
                ('print_quality', models.CharField(choices=[('standard', 'standard'), ('premium', 'premium'), ('luxury', 'luxury')], max_length=10)),
                ('color_accuracy', models.CharField(blank=True, max_length=100)),
                ('resolution', models.CharField(blank=True, help_text='example: 1200 DPI', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('logo', models.ImageField(upload_to='publishers/')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=254)),
                ('slug', models.SlugField(max_length=254, unique=True)),
                ('isbn', models.CharField(blank=True, max_length=13, null=True, unique=True)),
                ('isbn_digital', models.CharField(blank=True, max_length=13, null=True, verbose_name='ISBN digital')),
                ('language', models.CharField(choices=[('persian', 'persian'), ('english', 'english'), ('swedish', 'swedish'), ('other', 'other')], default='english', max_length=10)),
                ('book_type', models.CharField(choices=[('physical', 'physical'), ('digital', 'digital'), ('both', 'both')], max_length=10)),
                ('binding', models.CharField(blank=True, choices=[('hardcover', 'hardcover'), ('paperback', 'paperback'), ('spiral', ' spiral'), ('ebook', 'ebook')], max_length=10)),
                ('cover_image', models.ImageField(upload_to='books/covers/')),
                ('dimensions', models.CharField(blank=True, help_text='length x width x height (cm)', max_length=50)),
                ('weight', models.PositiveIntegerField(blank=True, help_text='weight', null=True)),
                ('description', models.TextField()),
                ('table_of_contents', models.TextField(blank=True, verbose_name='table of contents')),
                ('pages', models.PositiveIntegerField()),
                ('publication_date', models.DateField()),
                ('edition', models.PositiveIntegerField(default=1, verbose_name='edition')),
                ('base_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('discount_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('digital_stock', models.BooleanField(default=True, verbose_name='digital stock')),
                ('available', models.BooleanField(default=True)),
                ('featured', models.BooleanField(default=False)),
                ('best_seller', models.BooleanField(default=False)),
                ('new_release', models.BooleanField(default=False)),
                ('meta_description', models.TextField(blank=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('author', models.ManyToManyField(related_name='books', to='a_bookstore.author')),
                ('translator', models.ManyToManyField(blank=True, related_name='translated_books', to='a_bookstore.author')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='BookImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='books/images/')),
                ('alt_text', models.CharField(blank=True, max_length=64)),
                ('is_feautered', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='additional_images', to='a_bookstore.book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='images',
            field=models.ManyToManyField(blank=True, related_name='book_with_additionals', to='a_bookstore.bookimage'),
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=128)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, upload_to='catefories/')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='a_bookstore.category')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='category',
            field=models.ManyToManyField(related_name='books', to='a_bookstore.category'),
        ),
        migrations.CreateModel(
            name='DigitalBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_format', models.CharField(choices=[('pdf', 'PDF'), ('epub', 'EPUB'), ('mobi', 'MOBI'), ('azw3', 'AZW3')], default='pdf', max_length=5)),
                ('file', models.FileField(upload_to='books/digital/')),
                ('file_size', models.PositiveIntegerField(help_text='example: 12 MB')),
                ('watermark', models.BooleanField(default=True)),
                ('drm_protected', models.BooleanField(default=False)),
                ('download_limit', models.PositiveIntegerField(default=3)),
                ('download_expiry', models.PositiveIntegerField(default=30)),
                ('sample_pages', models.FileField(blank=True, null=True, upload_to='books/samples/')),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('last_download', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('book', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='digital_version', to='a_bookstore.book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='a_bookstore.publisher'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['id', 'slug'], name='a_bookstore_id_76b976_idx'),
        ),
    ]
